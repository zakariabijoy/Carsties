networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=b21525
    ports:
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      custom:
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=b21525
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib.mongodb/data
    networks:
      custom:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      custom:
  auction-svc:
    image: zakariabijoy/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=b21525; Database=auctions
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - rabbitmq
      - postgres
    networks:
      custom:
  search-svc:
    image: zakariabijoy/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:b21525@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      custom:
  identity-svc:
    image: zakariabijoy/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=b21525; Database=identity
    ports:
      - 80:80
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 10.5.0.200
  gateway-svc:
    image: zakariabijoy/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
    networks:
      custom:
  bid-svc:
    image: zakariabijoy/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDbConnection=mongodb://root:b21525@mongodb
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      custom:
  notify-svc:
    image: zakariabijoy/notify-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq
    networks:
      custom:
  web-app:
    image: zakariabijoy/web-app
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - webappdata:/var/lib/web/data
    ports:
      - 3000:3000
    extra_hosts:
      - id.carsties.com:10.5.0.200
    environment:
      - NEXTAUTH_SECRET=somethingreallyreallysecret
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://gateway-svc/
      - ID_URL=http://id.carsties.com
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
    networks:
      custom:
volumes:
  pgdata:
  mongodata:
  webappdata:
